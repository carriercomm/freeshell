#!/bin/bash


#define some variables:
DEBUG=1
VERBOSE=0
VERSION="0.01"
EMAIL="leprechuanese@gmail.com"
WEBSITE="https://github.com/leprechuanese/freeshell"
UNAME=`basename $0`
USERNAME_BLACKLIST_FILE="/home/new/.freeshell/username.blacklist"
EMAIL_FILE="/home/new/.freeshell/email"

# mapfile -t xyz < /etc/passwd
if (( $DEBUG )); then 
	mapfile -t invalidusernames < $USERNAME_BLACKLIST_FILE
	mapfile -t emails < $EMAIL_FILE
else
	sudo mapfile -t invalidusernames < $USERNAME_BLACKLIST_FILE
	sudo mapfile -t emails < $EMAIL_FILE
fi	

#echo ${invalidusernames[@]}

verbose(){
        msg="$2"
        if (( VERBOSE )); then
                echo "$1"
        fi
}

inarray() { 
	local n=$1 h
	shift
	for h; do 
		[[ $n = "$h" ]] && return
	done
	return 1
} # Usage: inarray "$value" "${array[@]}"

chke() {
	BASIC_RESULT=$(echo $1 | egrep "^(([-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~])+\.)*[-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~]+@\w((-|\w)*\w)*\.(\w((-|\w)*\w)*\.)*\w{2,4}$")

	if [ "x$BASIC_RESULT" = "x" ]; then echo 1; exit; fi

	INTERMEDIATE_RESULT=$(echo $1 | egrep "^(([-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~])+\.)*[-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~]+@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(\w((-|\w)*\w)*\.(\w((-|\w)*\w)*\.)*\w{2,4}))$")

	if [ "x$INTERMEDIATE_RESULT" = "x" ]; then echo 1; exit; fi

	ADVANCED_RESULT=$(echo $1 | grep -E "^(([-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~]+|(\"([][,:;<>\&@a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~-]|(\\\\[\\ \"]))+\"))\.)*([-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~]+|(\"([][,:;<>\&@a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~-]|(\\\\[\\ \"]))+\"))@\w((-|\w)*\w)*\.(\w((-|\w)*\w)*\.)*\w{2,4}$")

	if [ "x$ADVANCED_RESULT" = "x" ]; then echo 1; exit; fi
} #chke (check email)

ckemail() {
	em=$1
	if $(inarray "$em" "${emails[@]}"); then
		echo "Email $em already used."
		exit 1
	fi
} #checkemail()

motd() {
cat << EOF
$UNAME $VERSION

Welcome to a free shell service,
you are welcome to do anything you would like,
as long as you do not abuse this service or
conduct any malicious act, we encourage users
of all skill to give us a try.

We offer a free subdomain with your subscription
to our free service. Remember, it is important
for you to respect our service, as other users
do like using us. Also, you may freely browse
the web by entering w3m then the url. If you have
 any questions or concerns, please email them us.

Thanks again for using our service, and have a safe day.

Welcome to a free shell service, powered by Debian.
EOF
} #motd()

validmagic() {
	num2=$(echo $RANDOM) # create a ramdom number to avoid floods.
	echo "
Magic Number: $num2
What is the Magic Number?"
	read -s num1

	if [ "$num2" != "$num1" ] ; then
		# Avoid Flows
		echo "Sorry, Wrong Magic Number!"
		exit 1
	fi

} #validmagic()

getuser() {
cat << EOF

Use valid characters while creating your username or 
your username will be rejected.
(username must be between 4 to 16 chars long)

New username?
EOF

	echo -n "Username: "
	read u

	if [ "$u" = "" ] ; then
		# username is null.
		echo "you must provide a valid username."
		exit 1
	fi

	hacklogin=$(echo "$u" | tr -d "|;\1404247134176$")
	if [[ $u = *[![abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]]* ]]; then
		# dangerous caracteres.
		echo "Username enter was empty, Invalid Username."
		exit 1
	fi

	if (( ${#u} <= 3 )) || (( ${#u} >= 17 )); then
	        echo "Username must be 4 to 16 characters long."
	        exit 1
	fi
} #getuser()

blacklisted() {
	u=$1
	if $(inarray "$u" "${invalidusernames[@]}"); then
		echo "The username $u blacklisted"
		exit 1
	fi
} #blacklisted()

getpasswd() {
cat << EOF

please enter a password
(use more than 8 characters)
password?
EOF

	read -s password

	echo "Please retype the password?"
	read -s password2

	if [ "$password" != "$password2" ] ; then
        	# Avoid Flows
        	echo "Password mismatch!"
        	exit
	fi

	if (( ${#password} <= 7 )) || (( ${#password} >= 17 )); then
		echo "Wrong password, use between 8-16 characters"
		exit
	fi
} #getpasswd

checkifuserexist() {
	usuario=$1
	safelogin=$(echo "$usuario"|tr -cd "[:alnum:]")

	#password=$(echo $RANDOM$RANDOM)
	existe=$(sudo cat /etc/shadow|sed 'y/[:]/[ ]/'|awk '{print $1}'|grep "$safelogin")
	existe=$(echo $?)

	if [ "$existe" = 0 ] ; then
		# username already in system.
		echo "Username: '$safelogin' exist"
		exit
	fi
} #checkifuserexist()

getemail() {
cat << EOF

Please provide a valid email address
new username details will be send
using this address.

Whats your email address?
EOF
	read em

	echo "Please confirm email address?"
	read -s em2

	if [ "$em" != "$em2" ]; then
  		echo "Email addresses mismatch!"
  		exit
	fi
} #checkemail

if (( ! DEBUG )); then
	motd
	validmagic
	getuser
	blacklisted "$u"
	getpasswd
	checkifuserexist "$u"
else
 	u="abcd"
	password="abcdabcd"
fi # if DEBUG

getemail
cherror=$(chke "$em")
if (( "$cherror" )); then echo "Invalid email address!";exit 1; fi

ckm=$(ckemail "$em")
if (( "$ckm" )); then echo "Email Adress already in use.";exit 1; fi

exit

echo "

Email address match!

Please note, after user creation, '$usuario' details will be send to:

$em

Please check your Spam Box if you do not see an email containing
your user information or request a new email to:

new@leprechuan.net

This email will contain important information with your credentials
to access our service and details about your znc, emails, public_html
ssh and soo on, make sure you read it!

"
respuesta="y"
echo "

Ready to add '$usuario' in our system..

Please confirm 'y' to add your user, any other character to abort..
By answering 'y' you agree to our terms and policies."

echo -n "Are you sure you wnat to add '$usuario'? "
read correcto
if [ "$correcto" != "$respuesta" ] ; then
	# didn.t not accept our terms, so .byebye.
	echo "Aborting creation, thanks."
	read 
	exit
fi

# Lets create our new user.
echo "
Creating your new user: $usuario
"

#sudo useradd -g newshell -s /bin/bash -p $(mkpasswd xxx) test2
thepass=$(mkpasswd "$password")
sudo useradd -m -g freeshell -s /bin/bash -p "$thepass" "$safelogin"
sudo su "$usuario"
mkdir -p "/home/$usuario/public_html"
chmod 710 "/home/$usuario"
chgrp www-data  "/home/$usuario/public_html"
#sudo mkdir -p "/home/$usuario/public-html"
chmod -R 750 "/home/$usuario/public_html"
#sudo chgrp $usuario:www-data "/home/$usuario/public_html"

#sudo useradd -m -g freeshell -s /bin/bash -p "$thepass" "$safelogin"

# sudo su znc
# cd .znc
# cd configs
# ls -al znc.conf
# uglypass=$RANDOM$RANDOM;salt=$uglypass;password=$(mkpasswd $uglypass);  znchash=$(echo -n "$password$salt" | sha256sum | cut -f1 -d ' '); echo $znchash



echo "You been issue this password: $password

User succesfully created!
Thank you for registering with us.
To login into your new shell use:

ssh -l $safelogin leprechuan.net

From IPV6:
ssh -l $safelogin ipv6.leprechuan.net

username: $safelogin
password: $password


Please, hit Enter to end."

read 
exit

